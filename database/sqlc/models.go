// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0

package database

import (
	"database/sql"
	"time"
)

type Admin struct {
	ID   int64         `json:"id"`
	User sql.NullInt64 `json:"user"`
}

type Comment struct {
	ID      int64  `json:"id"`
	Pathid  int64  `json:"pathid"`
	Author  int64  `json:"author"`
	Content string `json:"content"`
	// e.g, joke, fact, diatribe, opinion
	ResponseType int64         `json:"response_type"`
	CreatedAt    time.Time     `json:"created_at"`
	Parent       sql.NullInt64 `json:"parent"`
	Hidden       sql.NullBool  `json:"hidden"`
	HiddenBy     sql.NullInt64 `json:"hidden_by"`
	HiddenAt     sql.NullTime  `json:"hidden_at"`
}

type Domain struct {
	ID string `json:"id"`
}

type DomainBan struct {
	User       sql.NullInt64  `json:"user"`
	BannedFrom sql.NullString `json:"banned_from"`
	BannedBy   sql.NullInt64  `json:"banned_by"`
	BannedAt   time.Time      `json:"banned_at"`
}

type GlobalModerator struct {
	ID        int64         `json:"id"`
	User      sql.NullInt64 `json:"user"`
	GrantedAt time.Time     `json:"granted_at"`
	GrantedBy int64         `json:"granted_by"`
}

type Moderator struct {
	ID        int64     `json:"id"`
	Domain    string    `json:"domain"`
	User      int64     `json:"user"`
	Level     int64     `json:"level"`
	GrantedAt time.Time `json:"granted_at"`
	GrantedBy int64     `json:"granted_by"`
}

type Path struct {
	ID     int64          `json:"id"`
	Domain sql.NullString `json:"domain"`
	Path   sql.NullString `json:"path"`
}

type RemovedComment struct {
	ID      int64  `json:"id"`
	Pathid  int64  `json:"pathid"`
	Author  int64  `json:"author"`
	Content string `json:"content"`
	// e.g, joke, fact, diatribe, opinion
	ResponseType int64         `json:"response_type"`
	CreatedAt    time.Time     `json:"created_at"`
	Parent       sql.NullInt64 `json:"parent"`
	RemovedAt    time.Time     `json:"removed_at"`
	RemovedBy    int64         `json:"removed_by"`
}

type User struct {
	ID       int64  `json:"id"`
	Username string `json:"username"`
	// Must be encrypted
	Password    string    `json:"password"`
	Email       string    `json:"email"`
	CreatedAt   time.Time `json:"created_at"`
	LastLogin   time.Time `json:"last_login"`
	AccessLevel int64     `json:"access_level"`
}
